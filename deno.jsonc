{
  // Schema deno.jsonc: @https://github.com/denoland/deno/blob/main/cli/schemas/config-file.v1.json
  "name": "@zackiles/cursor-mcp-manager",
  "version": "0.0.1",
  "description": "An MCP workspace manager for Cursor. Easily install, configure, start, stop, and update MCP servers centrally for your cursor workspace.",
  "license": "MIT",
  "author": "Zachary Iles <zachary.iles@gmail.com>",
  "homepage": "https://github.com/zackiles/cursor-mcp-manager",
  "repository": {
    "type": "git",
    "url": "https://github.com/zackiles/cursor-mcp-manager.git"
  },
  "tasks": {
    "dev": "deno run -A scripts/dev.ts",
    "test": "deno test -A src/test",
    "pre-publish": "deno fmt && deno check -r src/ && deno lint",
    "start": "deno run -A src/mod.ts start",
    "start:dry-run": "deno run -A src/mod.ts start --dry-run",
    "stop": "deno run -A src/mod.ts stop",
    "stop:dry-run": "deno run -A src/mod.ts stop --dry-run",
    "status": "deno run -A src/mod.ts status",
    "health-check": "deno run -A src/mod.ts health-check",
    "update": "deno run -A src/mod.ts update",
    "sync": "deno run -A src/mod.ts sync",
    "sync:json": "deno run -A src/mod.ts sync --json",
    "sync:validate": "deno run -A src/mod.ts sync --validate-only",
    "logs": "deno run -A src/mod.ts logs",
    "logs:stream": "deno run -A src/mod.ts logs --stream"
  },
  // Import maps. Prefer import "@scope/package" syntax in code.
  // NOTE: uses the import maps standard see https://github.com/WICG/import-maps
  "imports": {
    // Most of these are needed for deno-kit, be careful removing them.
    // <@deno-kit IMPORTS START>
    "@qnighy/dedent": "jsr:@qnighy/dedent@0.1.2",
    "@std/fmt": "jsr:@std/fmt@1",
    "@std/fs": "jsr:@std/fs@1",
    "@std/dotenv": "jsr:@std/dotenv@0",
    "@std/path": "jsr:@std/path@1",
    "@std/assert": "jsr:@std/assert@1",
    "@std/cli": "jsr:@std/cli@1",
    "@std/jsonc": "jsr:@std/jsonc@1",
    "@std/net": "jsr:@std/net@^1.0.4",
    "@std/testing": "jsr:@std/testing@1",
    "@deno-kit/kit": "jsr:@deno-kit/kit@0",
    // </@deno-kit IMPORTS END>
  },
  "unstable": [
    "net",
    "http",
    "fs",
    "ffi",
    "cron"
  ],
  "lock": true,
  "nodeModulesDir": "none",
  "fmt": {
    "lineWidth": 100,
    "semiColons": false,
    "useTabs": false,
    "indentWidth": 2,
    "singleQuote": true,
    "proseWrap": "preserve",
    "include": [
      "src/**",
      "scripts/**",
      "test/**",
      "examples/**",
      "README.md",
      "CONTRIBUTING.md",
      "CHANGELOG.md"
    ],
    "exclude": [
      "bin/**",
      "test/mocks/**",
      "test/fixtures/**"
    ]
  },
  // Schema for lint rules: @https://github.com/denoland/deno/blob/main/cli/schemas/lint-rules.v1.json
  "lint": {
    "rules": {
      // Possible tags: "fresh", "jsr", "jsx", "react", "recommended"
      "tags": [
        "recommended"
      ],
      "exclude": [
        // LLMs don't play well with this rule, you should patch them manually.
        "require-await"
      ]
    },
    "include": [
      "src/**",
      "scripts/**",
      "test/**",
      "deno.jsonc",
      "README.md",
      "CONTRIBUTING.md",
      "CHANGELOG.md",
      "examples/github-mcp-server.config.ts.example",
      "examples/github-mcp-server.env.example"
    ],
    "exclude": [
      "bin/**",
      "test/mocks/**",
      "test/fixtures/**"
    ],
    "report": "pretty"
  },
  "test": {
    "include": [
      "test/**/*.test.ts"
    ]
  },
  // See Configuring Typescript in Deno: @https://docs.deno.com/runtime/fundamentals/configuration/
  "compilerOptions": {
    "strict": true,
    "exactOptionalPropertyTypes": true,
    "lib": [
      "esnext",
      "deno.window",
      "deno.unstable"
    ]
  },
  // See jsr publishing: @https://docs.deno.com/runtime/reference/cli/publish/
  "publish": {
    "include": [
      "src/**",
      "bin/**",
      "scripts/**",
      "README.md",
      "LICENSE",
      "CHANGELOG.md"
    ],
    "exclude": []
  },
  // The main entry point for the library to be published
  "exports": {
    ".": "./src/mod.ts"
  }
}
